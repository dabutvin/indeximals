@model Indeximals.Models.QueryViewModel

@{
ViewData["Title"] = "Query";
}

<h2>Query</h2>

<form asp-controller="Home" asp-action="Query" method="get">
    <div>
        <label asp-for="Term"></label>
        <input asp-for="Term" />
    </div>
    <div>
    </div>
</form>

<div>
    <label for="suggest">Suggest</label>
    <input onkeyup="return suggest(this, event);" type="text" id="suggest" />
    <ul id="suggestions"></ul>
</div>

<hr />

<table>
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Sound</th>
            <th>Diet</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var animal in Model.Animals)
        {
            <tr>
                <td>@animal.Id</td>
                <td>@animal.Name</td>
                <td>@animal.Sound</td>
                <td>@animal.Diet</td>
            </tr>

        }
    </tbody>
</table>

<script>
    function suggest(e) {
        httpRequest = new XMLHttpRequest();
        httpRequest.onreadystatechange = newSuggestions;
        httpRequest.open('GET', 'Suggest?term=' + e.value);
        httpRequest.send();
    }

    function newSuggestions() {
        if (httpRequest.readyState === XMLHttpRequest.DONE) {
          if (httpRequest.status === 200 && httpRequest.responseText) {
            var suggestions = JSON.parse(httpRequest.responseText);
            var list = document.getElementById('suggestions');

            list.innerHTML = '';
            
            if(suggestions && suggestions.length) {
                for(var i = 0; i < suggestions.length; i++) {
                    var item = document.createElement('li');
                    item.innerText = suggestions[i].key;
                    list.append(item);
                }
            }
        } else {
            alert('whoops');
        }
    }
}
</script>